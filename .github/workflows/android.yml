name: Android

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ "main" ]
    types: [ labeled, synchronize, opened, reopened ]
  workflow_dispatch:

# Enrich gradle.properties for CI/CD
env:
  GRADLE_OPTS: -Dorg.gradle.jvmargs="-Xmx4096m -Dfile.encoding=UTF-8 -XX:+HeapDumpOnOutOfMemoryError" -Dkotlin.daemon.jvm.options="-Xmx2560m" -Dkotlin.incremental=false
  CI_GRADLE_ARG_PROPERTIES: --stacktrace -PpreDexEnable=false --max-workers 4 --no-daemon

jobs:
  tests:
    if: |
      github.event_name == 'push' ||
      (github.event_name == 'pull_request' && contains(github.event.pull_request.labels.*.name, 'Android'))
    name: Run all tests
    runs-on: macos-latest
    strategy:
      matrix:
        api-level: [28]
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - uses: actions/setup-java@v3
        with:
          distribution: 'adopt'
          java-version: '11'

      - name: Rust & Cargo cache
        uses: Swatinem/rust-cache@v2
        with:
          cache-on-failure: true

      - name: Install Rust targets
        run: |
          rustup target add i686-linux-android
          rustup target add x86_64-linux-android
          rustup target add armv7-linux-androideabi
          rustup target add aarch64-linux-android

      - name: Install Uniffi
        uses: actions-rs/cargo@v1
        with:
          command: install
          # keep in sync with uniffi dependency in Cargo.toml's
          args: uniffi_bindgen --version 0.19.2

      - name: Setup Gradle & Build test cases
        uses: gradle/gradle-build-action@v2
        env:
          ANDROID_NDK_TOOLCHAIN_DIR: ${{ env.ANDROID_NDK_HOME }}/toolchains
        with:
          build-root-directory: platforms/android
          arguments: |
            :library:assembleDebugUnitTest :library:assembleDebugAndroidTest ${{ env.CI_GRADLE_ARG_PROPERTIES }}
          cache-read-only: false

      - name: Run all the tests
        uses: reactivecircus/android-emulator-runner@v2
        with:
          working-directory: platforms/android
          api-level: ${{ matrix.api-level }}
          arch: x86
          profile: Nexus 5X
          force-avd-creation: false
          emulator-options: -no-snapshot-save -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none
          disable-animations: true
          script: |
            ./gradlew :library:testDebugUnitTest :library:connectedDebugAndroidTest ${{ env.CI_GRADLE_ARG_PROPERTIES }}

      - name : Upload test results
        if : ${{ always() }}
        uses : actions/upload-artifact@v3
        with :
          name : android-test-results-${{ matrix.api-level }}
          path : |
            ./**/build/reports/tests/**
            ./**/build/reports/androidTests/connected/**
